---
# - name: Создадим папку приложения
#   ansible.builtin.file:
#     path: /etc/apt/keyrings
#     state: directory

- name: Установка ключей gpg для репозитория nodejs LTS
  ansible.builtin.apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key"
    state: present

- name: Добавление репозитория nodejs LTS
  ansible.builtin.apt_repository:
    repo: "deb https://deb.nodesource.com/node_{{node_major}}.x nodistro main"
    state: present
    update_cache: yes

- name: Установка nodejs
  ansible.builtin.apt:
    name: nodejs
    state: present

- name: создание сервисного пользователя
  ansible.builtin.user:
    name: "{{ service_account }}"

- name: Создадим папку размещения архива
  ansible.builtin.file:
    path: "/home/{{service_account}}/frontend/{{version}}"
    state: directory
    recurse: yes
    owner: "{{ service_account }}"
    group: "{{ service_group }}"

- name: Скачивание артефактов фронтенда из Nexus
  ansible.builtin.get_url:
    url: "{{nexus_repo_url}}/{{nexus_repo_frontend_name}}/{{version}}/sausage-store-{{version}}.tar.gz"
    dest: "/home/{{service_account}}/frontend/{{version}}/sausage-store.tar.gz"
    username: "{{nexus_repo_user}}"
    password: "{{nexus_repo_pass}}"
    owner: "{{ service_account }}"
    group: "{{ service_group }}"

- name: Очистим папку приложения
  ansible.builtin.file:
    path: "/var/{{service_account}}"
    state: absent

- name: Создадим папку приложения
  ansible.builtin.file:
    path: "/var/{{service_account}}"
    state: directory
    recurse: yes
    owner: "{{ service_account }}"
    group: "{{ service_group }}"
    mode: "0755"

- name: Распаковка архива приложения sausage-store.tar.gz
  ansible.builtin.unarchive:
    remote_src: True
    src: "/home/{{service_account}}/frontend/{{version}}/sausage-store.tar.gz"
    dest: "/var/{{service_account}}"
    owner: "{{ service_account }}"
    group: "{{ service_group }}"

- name: Установка nginx
  ansible.builtin.apt:
    name: nginx
    state: latest

- name: Создание site для nginx
  template:
    src: nginx.sites.available.default.j2
    dest: /etc/nginx/sites-available/default

- name: Запуск фронтенда
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: nginx

- name: Открытие порта tcp
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ frontend_port }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept connections to frontend app.
