global:
  secretDockerConfigJSON: '$DOCKERCONFIGJSON'
  secretBackendPsqlUser: $BACKEND_PSQL_USER
  secretBackendPsqlPassword: $BACKEND_PSQL_PASSWORD
  secretBackendPsqlHost: $BACKEND_PSQL_HOST
  secretBackendPsqlPort: "$BACKEND_PSQL_PORT"
  secretBackendPsqlDatabase: $BACKEND_PSQL_DBNAME
  secretBackendMongoUser: $BACKEND_MONGO_USER
  secretBackendMongoPassword: $BACKEND_MONGO_PASSWORD
  secretBackendMongoHost: $BACKEND_MONGO_HOST
  secretBackendMongoPort: $BACKEND_MONGO_PORT
  secretBackendMongoDatabase: $BACKEND_MONGO_DATABASE

hostName: &hostName std-022-44.k8s.praktikum-services.tech
namePullSecrets: &namePullSecrets docker-config-secret

backend:
  minReadySeconds: 60
  revisionHistoryLimit: 12
  repository: gitlab.praktikum-services.ru:5050/std-022-044/sausage-store/sausage-backend
  imageTag: latest
  port: &backendPort 8080
  namePullSecrets: *namePullSecrets
  strategy:
    rollingUpdate:
      maxSurge: 20%
      maxUnavailable: 1
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: *backendPort
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 1
    failureThreshold: 6
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  env:
    - name: SPRING_DATASOURCE_URL
      value: jdbc:postgresql://rc1a-swsg2g6j6bhznvm0.mdb.yandexcloud.net:6432/std-022-044?ssl=true
    - name: REPORT_PATH
      value: /var/sausage-store/reports
    - name: LOG_PATH
      value: /var/sausage-store/logs
    - name: PSQL_USER
      valueFrom:
        secretKeyRef:
          name: backend
          key: psql_user
    - name: PSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: backend
          key: psql_password
    - name: PSQL_HOST
      valueFrom:
        secretKeyRef:
          name: backend
          key: psql_host
    - name: PSQL_DBNAME
      valueFrom:
        secretKeyRef:
          name: backend
          key: psql_dbname
    - name: psql_port
      valueFrom:
        secretKeyRef:
          name: backend
          key: psql_port
    - name: SPRING_DATASOURCE_USERNAME
      valueFrom:
        secretKeyRef:
          name: backend
          key: spring_datasource_username
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: backend
          key: spring_datasource_password
    - name: SPRING_DATA_MONGODB_URI
      valueFrom:
        secretKeyRef:
          name: backend
          key: spring_data_mongodb_uri
  updateMode: "Off"
  containerPolicies:
    - containerName: "*"
      minAllowed:
        cpu: 0m
        memory: 0Mi
      maxAllowed:
        cpu: 1
        memory: 500Mi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits

  minAvailable: 1

frontend:
  hostName: *hostName
  port: &frontendPort 8080
  targetPort: &frontendTargetPort 80
  namePullSecrets: *namePullSecrets
  replicas: 1
  revisionHistoryLimit: 12
  repository: gitlab.praktikum-services.ru:5050/std-022-044/sausage-store/sausage-frontend
  imageTag: latest
  volumes:
    - name: nginx-conf
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
      readOnly: true
      configMap:
        name: nginx-conf
        items:
          - key: nginx.conf
            path: nginx.conf
  strategy:
    type: Recreate
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"
  env:
    - name: DOMAIN
      value: *hostName
  containerPolicies:
    - containerName: "*"
      minAllowed:
        cpu: 0m
        memory: 0Mi
      maxAllowed:
        cpu: 1
        memory: 500Mi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
  minAvailable: 1
  ingress:
    className: nginx
    host: *hostName
    number: *frontendPort

report:
  port: &reportPort 8080
  namePullSecrets: *namePullSecrets
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 12
  repository: gitlab.praktikum-services.ru:5050/std-022-044/sausage-store/sausage-backend-report
  imageTag: latest
  env:
    - name: DB
      valueFrom:
        secretKeyRef:
          name: backend
          key: spring_data_mongodb_uri
    - name: PORT
      value: "8080"
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  livenessProbe:
    httpGet:
      path: /health
      port: *reportPort
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 1
    failureThreshold: 6
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: "app"
            operator: In
            values:
            - report
        topologyKey: "kubernetes.io/hostname"      
  autoscaling:
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: NULL